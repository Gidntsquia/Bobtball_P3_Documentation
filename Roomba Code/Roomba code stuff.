#Special Movement based thing

def lfollow_lcliff_until_bump():
     print "Starting lfollow_lcliff_until_bump()"
     while leftIsNotBumped and rightIsNotBumped():
        if BlackFrontLeft():
            create_drive_direct(c.BASE_LM_POWER, c.BASE_RM_POWER)
        else:
            create_drive_direct(c.BASE_LM_POWER, c.BASE_RM_POWER)

def lfollow_lcliff_smooth_until_bump():
     while leftIsNotBumped and rightIsNotBumped():
        if BlackFrontLeft():
            create_drive_direct(c.BASE_LM_POWER, c.LFOLLOW_SMOOTH_RM_POWER)
        else:
            create_drive_direct(c.LFOLLOW_SMOOTH_LM_POWER, c.BASE_RM_POWER)
            
def lfollow_rcliff_until_bump():
     print "Starting lfollow_rcliff_until_bump()"
     while leftIsNotBumped and rightIsNotBumped():
        if BlackFrontRight():
            create_drive_direct(c.BASE_LM_POWER, c.BASE_RM_POWER)
        else:
            create_drive_direct(c.BASE_LM_POWER, c.BASE_RM_POWER)   
            
def lfollow_rcliff_smooth_until_bump():
     print "Starting smooth_rcliff_until_bump()"
     while leftIsNotBumped and rightIsNotBumped():
        if BlackFrontRight():
            create_drive_direct(c.LFOLLOW_SMOOTH_LM_POWER, c.LFOLLOW_SMOOTH_RM_POWER)
        else:
            create_drive_direct(c.LFOLLOW_SMOOTH_LM_POWER, c.LFOLLOW_SMOOTH_RM_POWER)               
          
def lfollow_lfcliff_smooth_until_rfcliff_senses_white():
    print "Starting lfollow_lfcliff_smooth_until_rfcliff_senses_white()"
    while BlackFrontRight():
        if BlackFrontLeft():
            create_drive_direct(c.BASE_LM_POWER, c.LFOLLOW_SMOOTH_RM_POWER)
        else:
            create_drive_direct(c.LFOLLOW_SMOOTH_LM_POWER, c.BASE_RM_POWER)

def forwards_until_white_rfcliff_safe():
    print "Start drive_until_white_rfcliff_safe"
    m.activate_motors(1)
    while BlackFrontRight():
        if rightIsBumped():
            m.turn_left(100)
            msleep(100)
            m.activate_motors(1)
    
    m.deactivate_motors()
   
def forwards_until_black_rfcliff_safe():
    print "Start drive_until_black_rfcliff_safe"
    m.activate_motors(1)
    while NotBlackFrontRight():
        if rightIsBumped():
            m.turn_left(100)
            msleep(100)
            m.activate_motors(1)
    
    m.deactivate_motors()
                
    
    

    

            
            
            
def get_gas_valve():
    s.wfollow_right_until_black_left_front(9999)
    #s.align_far_fcliffs()
    #s.forwards_until_white_rfcliff_safe()
    #s.align_close_fcliffs()
    #m.backwards(300)    
    #s.forwards_until_white_rfcliff_safe()
    #s.forwards_through_line_rcliff()
    s.wfollow_right_until_black_right(9999)
    s.wfollow_right_until_white_right(9999)
    s.wfollow_right_until_black_right(9999)
    s.wfollow_right_until_white_right(9999)
    s.turn_left_until_rfcliff_senses_white()
    s.turn_left_until_rfcliff_senses_black()
    m.turn_left(200)
    # This turns the robot closer to 90 degrees
    s.forwards_until_white_lfcliff()
    s.forwards_through_line_lfcliff()
    s.align_far_fcliffs()
    s.align_far_fcliffs()
    s.forwards_until_bump()
    m.backwards(1000)
    #g.turn_left_gyro(180)
    m.turn_left()
    m.turn_left()
    s.forwards_until_black_lfcliff()
    s.align_close_fcliffs()    
    s.align_close_fcliffs()
    #m.turn_left(250)    
    m.lower_arm()
    msleep(500)
    #left turn of doom.
    m.backwards(900)
    m.lift_arm(3, 1, c.ARM_HALF_UP_POS)
    m.backwards(100)
    m.lift_arm()
    s.forwards_until_black_lfcliff()
    s.align_close_fcliffs()    
    s.forwards_until_bump()
    #m.backwards(200)
    #g.turn_right_gyro()
    m.turn_right(1650)   
    s.forwards_until_white_rfcliff()
    s.wfollow_left_until_black_right_front(9999)
    s.align_close_fcliffs()
    m.backwards(200)
    #g.turn_right_gyro(30)
    m.turn_right(c.RIGHT_TURN_TIME / 3)
    m.backwards(600)
    m.lower_arm(1, 6, c.ARM_DELIVERY_POS)
    m.turn_left(c.LEFT_TURN_TIME / 3)    
    #g.turn_left_gyro(90)
    m.backwards(600)
   
def a(): 
    m.turn_right()
    m.turn_right()
    s.forwards_until_black_lcliff()
    s.align_close_fcliffs()
    s.forwards_until_white_lcliff()
    s.forwards_until_black_lfcliff()
    s.align_close_fcliffs()
    m.turn_left()
    m.turn_left()
    s.forwards_until_white_rfcliff_safe()
    s.forwards_until_black_rfcliff_safe()
    s.forwards_until_white_rfcliff_safe()
    s.forwards_until_black_rfcliff_safe()
    s.lfollow_lcliff_smooth_until_bump()
    s.align_close_fcliffs()
    m.turn_right()
    m.turn_right()
    s.forwards_until_black_lfcliff()
    s.forwards_until_white_lfcliff()
    s.forwards_until_black_lfcliff()
    m.turn_left()
    s.lfollow_lfcliff_smooth_until_rfcliff_senses_black()
    m.turn_right()
    s.lfollow_lcliff_smooth(4000)
    s.align_close_fcliffs()
    m.turn_left()
    m.turn_left()
    s.lfollow_lcliff_smooth(4000)
    s.align_close_fcliffs()
    m.turn_left()
    s.lfollow_lcliff_until_bump(999999)
    s.align_close_fcliffs()
    m.turn_left()
    s.forwards_until_black_lcliff()
    m.forwards(1000)
    s.align_close_fcliffs()
    m.turn_right()
    m.forwards_until_black_lcliff()
    m.forwards_until_white_lcliff()
    m.forwards_until_black_lfcliff()
    s.align_close_fcliffs()
    m.turn_left()
    s.forwards_until_black_lcliff()
    m.forwards(1000)
    s.align_close_fcliffs()
    m.turn_right()
    m.forwards_until_black_lcliff()
    m.forwards_until_white_lcliff()
    m.forwards_until_black_lfcliff()
